// [START declaration]
syntax = "proto3";
package TrafficInfrastracture;
// [END declaration]

import "base/common.proto";
import "base/geometry.proto";

// [START enums]

enum LandingPadTrafficLight
{
  green = 0;
  yellow = 1;
  red = 2;
}

enum AirSpaceType
{
  AIR_CORRIDOR = 0;
  FLIGHT_AREA = 1;
  CTR = 2;
  RESTRICTED = 3;
  ELEVATOR = 4;
}

enum LandingType
{
  recovery = 0;
  crash = 1;
}

enum LandingPadType
{
  Normal = 0;
  Emergency = 1;
  No_comm = 2;
}

enum ActiveState
{
  INACTIVE = 0;
  ACTIVE = 1;
  TIME_BASED = 2;
}

// [END enums]

// [START messages]

message CTRAreaData
{
  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  repeated Common.ID launchers = 3;
  repeated Common.ID landing_pads = 4;
  optional Geom.Polygon3D incline_polygon = 5;
  optional Geom.Polygon3D decline_polygon = 6;
  repeated Common.ID ctr_zone_ids = 7;
}

message CTRAreaDataInput
{
  repeated CTRAreaData ctrAreaData = 1;
}

message LauncherData
{
  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  Geom.GeoCoordinate3D pos = 3;
  optional Geom.Polygon3D launcher_sector = 4;
  Geom.Angle launcher_direction = 5;
  repeated Common.TimeWindow time_windows = 6;
  ActiveState is_active = 7;
}

message LauncherDataInput
{
  repeated LauncherData launcherData = 1;
}

message LandingPadData
{
  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  Geom.Polygon2D pos = 3;
  optional Geom.Polygon3D landing_sector = 4;
  optional LandingPadTrafficLight landing_traffic_light = 5;
  repeated Common.TimeWindow time_windows = 6;
  ActiveState is_active = 7;
}

message LandingPadDataInput
{
  repeated LandingPadData landingPadData = 1;
}

message AirSpacesData
{
  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  oneof area
  {
    Geom.Rectangle rectangle = 3;
    Geom.Cylinder cylinder = 4;
    Geom.Polygon3D polygon = 5;
  }
  repeated Common.TimeWindow time_windows = 6;
  ActiveState is_active = 7;
  AirSpaceType air_space_type = 8;
  bool restricted_when_fault = 9;
}

message AirSpaceDataInput
{
  repeated AirSpacesData airSpacesData = 1;
}

message EmergencyLandingPointData
{
  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  Geom.GeoCoordinate2D pos = 3;
  LandingType point_type = 4;
  int32 priority = 5;
  bool is_active = 6;
}

message EmergencyLandingPointDataInput
{
  repeated EmergencyLandingPointData emergencyLandingPointData = 1;
}

// [END messages]

// [START output messages]

message ElevatorData
{
  enum ElevatorDirection {
    INCLINE = 0;
    DECLINE = 1;
    TWO_WAY = 2;
  }
  
  enum ElevatorZone {
    CTR = 0;
    AIR_CORRIDOR = 1;
    FLIGHT_AREA = 2;
  }

  Common.OpCode opcode = 1; // In current version, all existing elevators are sent, with opcode CREATE
  Common.ID data_id = 2;
  Geom.Cylinder elevator_pos = 3;
  ElevatorDirection elevator_direction = 4;
  ElevatorZone elevator_zone = 5;
}

message AntennaData
{
  enum AntennaType {
    MR = 0;
    LR = 1;
  }

  Common.OpCode opcode = 1;
  Common.ID data_id = 2;
  Geom.GeoCoordinate3D pos = 3;
  AntennaType antenna_type = 4;
  bool is_active = 5;
}

message AntennaDataInput
{
  repeated AntennaData antennaData = 1;
}

message OutputAirspaceData
{
  Common.ID area_id = 1;
  bool is_connected = 2;
}

// [END output messages]